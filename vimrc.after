
set t_Co=256
colorscheme blackboardish
let g:NERDTreeWinPos = "right"

syntax on

set smartindent
set modeline
set tabstop=4
set shiftwidth=4
set expandtab
set foldlevelstart=20

set title
set showmode
set scrolloff=15

" Color column
set colorcolumn=80
"let &colorcolumn="80,".join(range(120,999),",")
highlight ColorColumn ctermbg=234

let &winwidth = 80

" Hilight current line
set cursorline
highlight CursorLine ctermbg=235

set laststatus=2
set bs=eol,start,indent " Backspace config
set ruler " Show current position

" bells are annoying
set noerrorbells visualbell t_vb=
" Allow mouse mode
set mouse=a

" Hybrid number/relative mode in Vim 7.4
set number
set relativenumber

" Don't highlight keywords on search
set nohlsearch

" Splits open to the right and below
set splitright
set splitbelow

" autoreload .vimrc
autocmd BufWritePost .vimrc sourceÂ %

" vim Gist stuff
let g:gist_detect_filetype = 1

" GUI font
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h13

" Custom mapping for tabedit -> Te
command! -complete=file -nargs=1 Te tabedit <args>

" Disable go build for syntastic
let g:syntastic_go_checkers = ['gofmt']

" Disable syntax checking for arduino
" let g:syntastic_arduino_checkers = []
let g:syntastic_arduino_checkers = ['avrgcc']
let g:syntastic_arduino_avrgcc_quiet_messages = { "level": "errors",
                                                \ "type": "style",
                                                \ "regex": "",
                                                \ "file": "\m\c\.ino$" }

let g:ctrlp_regexp = 1
let g:ctrlp_abbrev = {
\ 'gmode': 'i',
\ 'abbrevs': [
  \ {
    \ 'pattern': '\(^@.\+\|\\\@<!:.\+\)\@<! ',
    \ 'expanded': '.\{-}',
    \ 'mode': 'pfrz',
  \ },
  \ ]
\ }

" Use the_silver_searcher if available
if executable('ag')
  let g:ackprg = 'ag --nogroup --nocolor --column'
endif
